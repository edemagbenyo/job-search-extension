/// <reference types="cheerio" />
import 'array-flat-polyfill';
import { Plugin } from 'rollup';
/** CheerioStatic objects with a file path */
export declare type CheerioFile = CheerioStatic & {
    filePath: string;
};
export interface HtmlInputsOptions {
    /** This will change between builds, so cannot destructure */
    readonly srcDir: string | null;
}
export interface HtmlInputsPluginCache {
    /** Scripts that should not be bundled */
    scripts: string[];
    /** Scripts that should be bundled */
    js: string[];
    /** Absolute paths for HTML files to emit */
    html: string[];
    /** Html files as Cheerio objects */
    html$: CheerioFile[];
    /** Image files to emit */
    img: string[];
    /** Stylesheets to emit */
    css: string[];
    /** Cache of last options.input, will have other scripts */
    input: string[];
    /** Source dir for calculating relative paths */
    srcDir?: string;
}
export declare type HtmlInputsPlugin = Pick<Required<Plugin>, 'name' | 'options' | 'buildStart' | 'watchChange'> & {
    cache: HtmlInputsPluginCache;
};
export default function htmlInputs(htmlInputsOptions: HtmlInputsOptions, 
/** Used for testing */
cache?: HtmlInputsPluginCache): HtmlInputsPlugin;
